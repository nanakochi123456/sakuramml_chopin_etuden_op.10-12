// 革命
// Etuden Op.10-5
/////////////////////////////////////////////////////////////////////////////////////////
// 各種設定らしきもの
Int MSGS=0
Int TWM2=0
Int TIMIDITY=0
Int BRIGHT=0
Int LOOP=0

Int KEY=0
Int TEMPORATIO=100
Int TEMPODIFF=0
// Base Tempo=120 （楽譜は160）
Int IGNORETEMPO=0
Int TINY=0
Int GAKUHU=0
//Int DEBUG=1
//Mute(1,2,3)
// ↑上2行のコメント外すと、メトロノームだけが鳴るなの。どうやって使うかは秘密なの。ぐすぐす；；
////////////////////////////////////////////////////////////////////////////////////////////////

拍子 4,4
Tempo 160

曲名{"革命 Etuden Op.10-12"}

作者{"Fryderyk Franciszek Chopin MML by ななこっち★"}

IF(MSGS=1 || TWM2=1) {
	ResetGS
}
#METORONOMEMML={M4m4m4m4}

IF(TINY=1 || GAKUHU=1 || TWM2=1) {
	Expression.Frequency(2);
	Modulation.Frequency(8);
	System.TimeBase=96
} ELSE {
	Expression.Frequency(1);
	Modulation.Frequency(1);
	System.TimeBase=3072
}

#PEDALON={Sub {r64y64,127}}
#PEDALOFF={r-36 y64,0 r36}

Include(tempo.h)
Include(rchord.h)
Include(rmelody.h)
Include(loop.h)

#LN={RMDCresc(0)}
#LFF={v127 RMDV(120,127) #LN}
#LF={v120 RMDV(95,110) #LN}
#LMF={v105 RMDV(85,95) #LN}
#LMP={v95 RMDV(75,85) #LN}
#LP={v80 RMDV(65,75) #LN}
#LPP={v70 RMDV(50,60) #LN}
#L5={RMDV(-20)}
#LC={RMDCresc(1)}
#LC2={RMDCresc(2)}
#LD={RMDCresc(-1)}
#LD2={RMDCresc(-2)}

IF(GAKUHU=1) {
	RCDINIT(0,0)
} ELSE {
	RCDINIT(370,856)
}

Key(KEY)
Int QTemp
Function QSet(value) {
	QTemp=value
}

Function Q(value) {
	Str MML="q"
	IF(GAKUHU=1) {
		MML=MML+"100"
	} ELSE {
		MML=MML+(value * QTemp / 100)
	}
	MML
}

#V_PIANO={
	#REV
	V(100)
	M(0)
	IF(BRIGHT=1) {
		@(BrightPiano)
	} ELSE {
		@(GrandPiano)
	}
	QSet(100)
}

// Tempo
TR(16)
	// intro
	#introtempo={
		[
			TmpChangeR(80,0)
			r8
			TmpChangeR(100,0)
			TmpChangeR(130,!4.)
			TmpChangeR(150,!2)
			TmpChangeR(130,!2)
			TmpChangeR(90,!2)
		]
		TmpChangeR(65,0)
		r8
		TmpChangeR(80,0)
		TmpChangeR(120,!4.)
		TmpChangeR(130,!2)
		TmpChangeR(120,!1)
		TmpChangeR(125,!1)
		TmpChangeR(85,!0)
		TmpChangeR(120,!2)
		TmpChangeR(95,!2)
	}
	#m1tempo={
		TmpChangeR(130,!2)
		TmpChangeR(125,!2)
		TmpChangeR(130,!2)
		TmpChangeR(125,!4)
		TmpChangeR(90,0)
		TmpChangeR(125,!4)
		//
		[3
			TmpChangeR(130,!2)
			TmpChangeR(125,!4)
			TmpChangeR(90,0)
			TmpChangeR(125,!4)
		]
		TmpChangeR(130,!2)
		TmpChangeR(125,!2)
		[
			TmpChangeR(130,!2)
			TmpChangeR(125,!4)
			TmpChangeR(90,0)
			TmpChangeR(125,!4)
		]
		TmpChangeR(130,!2)
		TmpChangeR(125,!2)
		TmpChangeR(130,!2)
		TmpChangeR(100,!2)
		[3
			TmpChangeR(130,!2)
			TmpChangeR(125,!2)
		]
		TmpChangeR(130,!2)
		TmpChangeR(125,!4)
		TmpChangeR(90,0)
		TmpChangeR(125,!4)

		TmpChangeR(130,!2)
		TmpChangeR(125,!2)

		TmpChangeR(130,!2)
		TmpChangeR(125,!4)
		TmpChangeR(90,0)
		TmpChangeR(120,!8)
		TmpChangeR(110,!8)

		TmpChangeR(100,0)
		TmpChangeR(130,!1)
		TmpChangeR(142,!2)
		TmpChangeR(100,!2)
		TmpChangeR(130,!4.)
		TmpChangeR(75,0)
		r16
		TmpChangeR(150,0)
		r16
		TmpChangeR(130,0)
		TmpChangeR(90,!2)
		TmpChangeR(120,0)
		TmpChangeR(100,!1)
	}

	#m2tempo={		[
			TmpChangeR(128,!2)
			TmpChangeR(126,!4)
			TmpChangeR(80,0)
			TmpChangeR(130,!8)
			TmpChangeR(110,!8)

			TmpChangeR(128,!2)
			TmpChangeR(126,!4)
			TmpChangeR(120,0)
			TmpChangeR(90,!8)
			TmpChangeR(110,!8)
		]
		TmpChangeR(128,!2)
		TmpChangeR(126,!4)
		TmpChangeR(80,0)
		TmpChangeR(130,!8)
		TmpChangeR(110,!8)

		TmpChangeR(130,!2)
		TmpChangeR(128,!4)
		TmpChangeR(85,0)
		TmpChangeR(134,!8)
		TmpChangeR(115,!8)

		TmpChangeR(130,!2)
		TmpChangeR(125,!2)
		TmpChangeR(120,!2)
		TmpChangeR(90,!2)

		[3
			TmpChangeR(130,!2)
			TmpChangeR(125,!2)
		]
		TmpChangeR(130,!2)
		TmpChangeR(110,!8)
		TmpChangeR(90,!4.)
	}
	#intro2tempo={
		[
			TmpChangeR(70,0)
			r8
			TmpChangeR(95,0)
			TmpChangeR(130,!4.)
			TmpChangeR(150,!2)
			TmpChangeR(130,!2)
			TmpChangeR(90,!2)
		]
		TmpChangeR(55,0)
		r8
		TmpChangeR(65,0)
		TmpChangeR(110,!4.)
		TmpChangeR(130,!2)
		TmpChangeR(120,!1)
		TmpChangeR(125,!1)
		TmpChangeR(85,!0)
		TmpChangeR(120,!2)
		TmpChangeR(90,!2)
	}

	#m3tempo={
		TmpChangeR(128,!2)
		TmpChangeR(125,!2)

		TmpChangeR(130,!2)
		TmpChangeR(125,!8)
		TmpChangeR(90,0)
		TmpChangeR(100,!4^8)

		TmpChangeR(130,!2)
		TmpChangeR(125,!4)
		TmpChangeR(90,0)
		TmpChangeR(125,!4)

		TmpChangeR(120,!2)
		TmpChangeR(80,0)
		TmpChangeR(110,!2)

		TmpChangeR(130,!2)
		TmpChangeR(125,!2)

		TmpChangeR(130,!2)
		TmpChangeR(110,!4.)
		TmpChangeR(70,!8)

		TmpChangeR(100,!8)
		TmpChangeR(115,!4.)
		TmpChangeR(90,!2)

		TmpChangeR(90,0)
		TmpChangeR(100,!4)
		TmpChangeR(95,!4)
		TmpChangeR(85,0)
		TmpChangeR(55,!4.)
		TmpChangeR(160,!8)

		TmpChangeR(100,0)
		TmpChangeR(115,!2)
		TmpChangeR(105,!2)

		TmpChangeR(130,!2)
		TmpChangeR(115,!2)

		TmpChangeR(130,!2)
		TmpChangeR(125,!2)
		//
		TmpChangeR(130,!2)
		TmpChangeR(125,!8)
		TmpChangeR(90,0)
		TmpChangeR(100,!4^8)

		TmpChangeR(130,!2)
		TmpChangeR(125,!4)
		TmpChangeR(90,0)
		TmpChangeR(125,!4)

		TmpChangeR(120,!2)
		TmpChangeR(75,0)
		TmpChangeR(70,!4.)
		TmpChangeR(120,!8)

		TmpChangeR(120,0)

		TmpChangeR(130,!2)
		TmpChangeR(125,!2)

		TmpChangeR(130,!2)
		TmpChangeR(115,!2)

		[
			TmpChangeR(130,!2)
			TmpChangeR(125,!2)
		]
		[
			TmpChangeR(130,!2)
			TmpChangeR(115,!2)
		]
		[
			TmpChangeR(125,!2)
			TmpChangeR(115,!2)
		]
		TmpChangeR(105,!1)
		TmpChangeR(90,!1)
		TmpChangeR(110,0)
		TmpChangeR(125,!1^1)
		TmpChangeR(105,!1^1)
		TmpChangeR(125,!1^1)
		TmpChangeR(105,!1)
		TmpChangeR(70,!1)
		TmpChangeR(50,0)
		r8
		TmpChangeR(123,!4)
		r2.
		TmpChangeR(100,!1)
		TmpChangeR(80,!1)
	}
	#introtempo
	#tempotr={
		#m1tempo
		#m2tempo
		#intro2tempo
	}
	LoopPlay(#tempotr,0)
	#m3tempo

// pedal
#p1={
	[2 r1]
	#PEDALON r4. #PEDALOFF r8^r2
	r1
	#PEDALON r4. #PEDALOFF r8^r2
	[3 r1]
}
#p2={
	[
		[3
			#PEDALON r2^16 #PEDALOFF r2 r-16
			r1
		]
		[4
			#PEDALON r2 #PEDALOFF
		]
		:
		#PEDALON r4 #PEDALOFF r2.
		r1
	]
	#PEDALON r2 #PEDALOFF r2
	#PEDALON r8 #PEDALOFF r8^2.
}

#p3={
	[4
		#PEDALON r4.#PEDALOFF r8^2
	]
	[3
		#PEDALON r4 #PEDALOFF r2.
	]
	r1
	#PEDALON r2^8 #PEDALOFF r4.
	#PEDALON r2.^8 #PEDALOFF r8
	#PEDALON r2 #PEDALOFF r2
	#PEDALON r2. #PEDALOFF #PEDALON r8. #PEDALOFF r16
}

#p4={
	[2
		#PEDALON r4. #PEDALOFF r8^r2
		r1
	]
	#PEDALON r4. #PEDALOFF r8^r2
	[3 r1]
}

#p5={
	[
		[3
			#PEDALON r2^16 #PEDALOFF r2 r-16
			r1
		]
		:
		[4
			#PEDALON r2 #PEDALOFF
		]
		#PEDALON r4 #PEDALOFF r2.
		r1
	]
	[#PEDALON r2 #PEDALOFF]
	#PEDALON r4. #PEDALOFF r8^2
	[#PEDALON r2 #PEDALOFF]
	#PEDALON r4^16 #PEDALOFF r8.^2
	[#PEDALON r2 #PEDALOFF]
	#PEDALON r1 #PEDALOFF
	#PEDALON r2 #PEDALOFF r2
	#PEDALON r4^16 #PEDALOFF r8.^2
	[4 r1]
	#PEDALON r4 #PEDALOFF r2.
	#PEDALON r1 #PEDALOFF
	#PEDALON r4 #PEDALOFF r2.
	#PEDALON r2 #PEDALOFF [#PEDALON r4 #PEDALOFF]
	#PEDALON r4. #PEDALOFF r8^2
	r1
	[#PEDALON r2 #PEDALOFF]
}

// parts

#up1={
	#LF
	l2RCD(b>dfgb<) r2
	r2. l8.RCD(a->e-fa-<) l16 RCD(g>g<) 
	l2RCD(>dfg>d<<) r2
	r2. l8.RCD(a->e-fa-<) l16 RCD(g>g<) 
	l8 RCD(>fg>df<<) 
}

#up2={
	c8r8r2.
}

#up3={
	r2
	r8
	#LF r16l16RCD(c>c<) l8.RCD(d>d<) l16RCD(e->e-<) 
	l2RCD(e->e-<) < #LP r8.l16RCD(g>ce-g<) l8.RCD(g>ce-g<) l16RCD(g>ce-g<) 
	#LMP l2RCD(a->ce-a-<) l8 #LP RCD(g>ce-g<) >
	#LF r16l16RCD(c>c<) l8.RCD(d>d<) l16RCD(e->e-<) 
	l2RCD(e->e-<) < #LP r8.l16RCD(g>ce-g<) #LMP l8.RCD(g>ce-g<) #LMF l16RCD(g>ce-g<) 
	#LF l1RCD(a>ce-a<) 

	l8 RCD(>da>d<<) r8 l4RCD(g>dg<) r8.l16RCD(g>d-g<) l8.RCD(a->d-a-<) l16 RCD(g>d-g<) 
	l8 RCD(g>cg<) l16 RCD(>c>c<<) r16 l4 RCD(f>cf<) r8.l16RCD(f>cf<) l8.RCD(g>cg<) l16RCD(f>cf<) 
	#LMF l2.^8.RCD(e>ce<) l16RCD(e->e-<) 
	Sub{b2}l4RCD(e->e-<) #LMP RCD(d>d<) r2
}

#up4={
	r2
	r8
	#LP r16l16RCD(c>c<) #LMP l8.RCD(d>d<) #LMF l16RCD(e->e-<) 
	#LF l2RCD(e->e-<) <r8.#LP l16RCD(g>ce-g<) l8.RCD(g>ce-g<) l16RCD(g>ce-g<) 
	#LMP l2RCD(a->ce-a-<) l8 #LP RCD(g>ce-g<) >

	#LMP r16l16RCD(c>c<) #LMF l8.RCD(d>d<) #LMF l16RCD(e->e-<) 
	#LF l2RCD(e->e-<) <r8.#LP l16RCD(g>ce-g<) l8.#LMP RCD(g>ce-g<) #LMF l16RCD(g>ce-g<) 

	#LF l1RCD(a>e-fa<) 
	#LP l4.RCD(b->fb-<) l4RCD(b->fb-<) RCD(b>g-b<) RCD(b>gb<) >
	#LMP RCD(cgb->c<) RCD(c#b>c#<) #LMF l8 RCD(db>d<) RCD(e-b->e-<) RCD(eb->e<) 
	#LF l2RCD(fb->df<) l4 RCD(dfb->d<) #LMF Sub{RCD(e-fa) } RMD(>d8.c16<)
	l8 RCD(dfb-) r8r2.
}

#lo1={
	l16
	[
		#LF
		#LC
		RMD(a-g fde-d <bga-g fde-d<)
		#LD
		RMD(bga-g fde-d) [4 RMD(c<g>)]
		RMDV(20)
		:
		<RMD(b8)>>>
	]
	RMD(b8)>>
}
#co2={
	l16
	RMD(a-g fde-d) < RMDCresc(-1)[3 RMD(bga-g fde-d<)]>
	RMDCresc(1) RMD(c<b>gf) [RMD(e-d)] RMD(c<b>b-a-) [RMD(gf)]
	RMDCresc(3) RMD(e-d>e-d) RMDCresc(-1) [RMD(c<b>)]<[RMD(a-g)][RMD(fe-)]
}


#loc1={
	#LF
	RMD(c) #L5 #LC RMD(g>cde-g>cd) #LD RMD(e-dc<ge-dc<g)
}
#loc2={
	[#LF RMD(c) #L5 #LC RMD(g>cd) #LD RMD(e-dc<g)]
}
#locfp2={
	[#LF RMD(c) #L5 #LC RMD(f#>cd) #LD RMD(e-dc<f#)]
}
#locf2={
	[#LF RMD(c) #L5 #LC RMD(f>cd) #LD RMD(e-dc<f)]
}
#lobb={
	#LF RMD(<b>) #L5 #LC RMD(b>dg>) #LD RMD(d<gd<b)
	#LF RMD(<b->) #L5 #LC RMD(b->d-g>) #LD RMD(d-<gd-<b-)
	#LF RMD(<a>) #L5 #LC RMD(a>cf>) #LD RMD(c<fc<a)
	#LF RMD(<a->) #L5 #LC RMD(a->cf>) #LD RMD(c<fc<a-)

	#LC
	RMD(<g>g>c<b> d-cdc# e-ded# feg-f)
	#LD
	RMD(gf#a-g b-a-gf e-dc<b a-gfd)
}

#lobc={
	#LN
	RMD(d-b->c-<b->b-<b->c-<b- e-b->c-<b->b-<b->c-<b-)
	RMD(e-b->c<b->b-<b->c<b- fb->b-<b- g-b->b-<b-)
//	RMD(fb->dfb->dg16.f32 fd<b-g fe-c<f)
	#LC RMD(fb->dfb->dgf) #LD2 RMD(fd<b-g) #LN RMD(fe-c<f)
	RMD(<b->>d-cc- <b->cc-<b- a>c-<b-a g#b-ag#)
}

#loend={
	[#LF RMD(d-) #L5 #LC RMD(>d-g-a-) #LD RMD(b-a-g-d-<)]
	#LF RMD(d-)> #L5 #LC2 RMD(d-gb->d-) #LD RMD(c<b-a- gfed-c<b-a-g)
	[#LF RMD(c-) #L5 #LC RMD(>c-f-g-) #LD RMD(a-g-f-c-<)]
	#LF RMD(c-)> #L5 #LC2 RMD(c-fa->c-<) #LD RMD(b-a-g- fe-dc-<b-a-g-f)
	[#LMF RMD(<b->) #L5 #LC RMD(b->e-f) #LD RMD(gfe-<b-)]
	[#LMP RMD(<b>) #L5 #LC RMD(b>dg>) #LD RMD(d<gd<b)]
	#LP RMD(c) #L5 #LC RMD(g>cde-g>cd) #LD RMD(e-dc<ge-dc<g) #LN
	#LP RMD(<f>d-fg a->d-fg a-gfd- <a-fd-<a-)

	Q(40)l8 RMD(g) Q(95)>l16 RMD(ed#feg-f gf#a-g ag#b-a)
	RMD(>c-<b->c<b> d-cdc# e-ded# feg-f)
	RMD(gf#a-g b-a-gf e-dfe- gfe-d)
	RMD(c<b>dc <b-a-gf# ga-fg e-fde-)

	[
		Q(40)l8 RMD(c) Q(95)l16>> RMD(d-c <b-ga-g ecd-c <b-ga-g)
		#LPP [8 fc]
	]
	#LFF >Q(40)RMD(c8) Q(95)
}

#coend={
	#LFF
	l16
	RMD(a-g ecd-c) [3 RMD(<b-ga-g ecd-c)]
}

#loend2={
	<
	v120
	l2 [RCD(f>f<)]
	Q(60)l4 [RCD(c>c<)]
}
#lo3={
	[3
		#loc1
		:
		#loc2
	]
	#locfp2
	#lobb
	[3
		#loc1
		:
		#loc2
	]
	#locf2
	#lobc

}

#lo7={
	[
		[3
			#loc1
			:
			#loc2
		]
		#locfp2
		:
		#lobb
	]
}

//
#up5={
	#LF
	l2.RCD(b>d#g#b<) l8.RCD(d#g#b>d#<) l16 RCD(e#>e#<) 
	l2.RCD(f#a#>d#f#<) l8. RCD(f#>f#<) l16 RCD(g#>g#<) 
	l2.RCD(a>c#f#a<) l8.RCD(c#f#a>c#<) l16 RCD(d#>d#<) 
	l2.RCD(eg#>c#e<) l8.RCD(e>e<) l16 RCD(f#>f#<) 
	l2.RCD(g#>d#f#g#<) l8.RCD(g#>d#f#g#<) l16 RCD(a#>a#<) 
	l4 RCD(>c-fa->c-<<) l2 RCD(b->fa-b-<) l8.RCD(b->fa-b-<) l16 RCD(>c>c<<) >
	l4 RCD(d-gb->d-<) l4 RCD(cgb->c<) r2
	r1

	#LFF
	[
		l2 RCD(a->cfa-<) l4 RCD(f>cf<) RCD(cf>c<) 
		:
		l2 RCD(<b->fb-) l4 RCD(<a->fa-) r4
	]
	l2.RCD(cf>c<) l8.RCD(<b>fb) l16RCD(cf>c<) 
}
#up6={
	l2 RCD(dfb>d<) r2
	r2.l8.RCD(<a->e-fa-) l16RCD(<g>g) 
	l2 RCD(fg>df<) r2
	r2.l8.RCD(<a->e-fa-) l16RCD(<g>g) 
	l8 RCD(fg>dg<) 
}

#lo5={
	l8 RMD(g#8)l16 RMD(>gg# b>d#<a#b> d#g#dd# g#bgg#)
	RMD(<<d#>>>d#<e#f# a#>d#<dd# f#a#<aa#> d#f#<e#f#)
	l8 RMD(<f#8>) l16 RMD(e#f# a>c#<g#a >c#f#<b#>c# f#ae#f#)
	RMD(<c#>>c#<d#e g#>c#<<b#>c# eg#<gg# >c#e<d#e)
	RMD(<b#>>>d#<gg# ag#f#e d#c#<b#a gg#d#g#)
	RMD(d>>f<ab- >c-<b-a-g- fe-dc- <ab-fb-)
	RMD(e>>g<b>c d-c<b-a- gfeg fed-c)
	#LC
	RMD(<b>cd-c <b-a-gf ed-c<b >c<b-a-g)

	#LN
	[
		RMD(f>cfg a->cfg) #LC RMD(a->cfg) #LD RMD(a-gfc) #LN
		:
		RMD(d-fd-<a- fd-<a-f) [RMD(d-<a->d-f)]<
	]
	RMD(dfdc <a-fdc <a-fdc <a->cda-)
}

#lo6={
	l8 RCD(<g8>g8) 
}

#up11={
	r2r16
	#LF
	l16 RCD(c>c<) l8 RCD(c#>c#<) l8.RCD(d>d<) l16 RCD(e->e-<)
	l2 RCD(e->e-<) r8.l16 #LP RCD(<g>ce-g) l8.RCD(<g>ce-g) l16 RCD(<g>ce-g)
	#LMP l2 RCD(<a->ce-a-) #LP l12 RCD(<g>ce-g) #LF RCD(<b>b) RCD(c>c<) l16 RCD(d->d-<) RCD(d>d<) r16. l32 RCD(e->e-<)
	l2 RCD(e->e-<) r8.#LP l16 RCD(<g>ce-g) l8.#LMP RCD(<g>ce-g) l16 #LMF RCD(<g>ce-g)
	#LF l1 RCD(<a>ce-a)
	Sub { r-40 
		RCDINIT(35,50)
		l8 RCD(<a>da>d<) r8
	} r4
	RCDINIT(400,856)
	l4 RCD(<g>dg) l12 r [RCD(<g>d-g)] l16 RCD(<g>d-g) RCD(<a->d-a-) r RCD(<g>d-g)
	RCD(<g>g) RCD(c>c<) r8 l4 RCD(<f>cf)
		l12 r [RCD(<f>cf)]Sub{l20 RCD(<e>ce)RCD(<f>cf)RCD(<g>cg)rRCD(<f>cf)}r4
	l4 RCD(<e>ce) Sub{l2. RMD(c2.)} l2^8. RCD(<e->e-) l16 RCD(<e->e-)
	Sub{l2 RMD(<b2>)} l4 RCD(<e->e-) RCD(<d>d)r2
	r1.


	#LF
	l12 r RCD(<b>b) RCD(c>c<) l16 RCD(d->d-<) RCD(d>d<) r RCD(e->e-<)
	l2 RCD(e->e-<) r8.l16 #LP RCD(<g>ce-g) l8.RCD(<g>ce-g) l16 RCD(<g>ce-g)
	#LMP l2 RCD(<a->ce-a-) #LP l12 RCD(<g>ce-g) #LF RCD(<b>b) RCD(c>c<)
		Sub{l20 RCD(c#>c#<) RCD(d>d<) RCD(f>f<) r RCD(e->e-<)} r4
	l2 RCD(e->e-<) r8.l16 #LP RCD(<g>ce-g) l8.#LMP RCD(<g>ce-g) l16 #LMF RCD(<g>ce-g)
	l1 #LF RCD(<a>e-a)

	#LFF l2 RCD(<b->d-b-) l4 RCD(<a-b->d-a-) l8.RCD(<g-b->d-g-) l16 RCD(<fb->d-f)
	l2 RCD(<fb->d-f) l4 RCD(<eb->e) r4
	l2 RCD(<a->c-f-a-) l4 RCD(<g-a->c-g-) l8.RCD(<f-a->c-f-) l16 RCD(<e-a->c-e-)
	l2 RCD(<e-a->c-e-) l4 RCD(<da->d) r4
	l1 RCD(<g>e-g)
	#LF Sub{l1 RMD(d1)}Sub{l2 RMD(<g2>) #LMP RMD(<g2>)} #LMF RMD(g2^4.) #LMP RMD(f8)
	#LP Sub{l1 RCD(<g>c)}l2 RMD(f2e-2)
	Sub{l1 RCD(<fa->)} l8 RMD(e-8f16e-16 d-8.e-16 f4<a-4>)
	l1^1 RCD(<e->c)
	Sub{l2. RCD(<df>)} RMD(c4.<b8>d4)r4
	r1
	Sub{<l8 RMD(c8) r8 r2. l1 RCD(fa-)>}
	RMD(c1.)#LMP RMD(d2)
	#LMF l1RCD(<eg>e)
	#LP
	Sub{l1 RCD(<ca->)}
	Sub{RMD(<g2f2>)}
	RMD(c2.)l4 #LF RCD(<b>d)
	#LFF l8 RCD(<eg>ce)
}

#upend2={
	l2
	#FF
	RCD(cfa>c<)
	RCD(cfa->c<)
	l4Q(60)
	RCD(cfg>c<)
	RCD(ceg>c<)
}

TR(1)
	#V_PIANO
	RCDINIT(400,856)
	RMDINIT(250,370,110,115)
	v110
	Q(98)
	o5
	Sub{#p1}
	#up1
	o7
	#co2

	#tr1={
		Sub{#p2}
		#up2
		o6
		#up3
		r1
		o6
		#up4
		o5
		Sub{#p3}
		#up5
		o6
		Sub{#p4}
		#up6
		o7
		#co2
	}
	LoopPlay(#tr1,0)
	Sub{#p5}
	#up2
	o6
	#up11
	o7
	#coend
	#upend2
	IF(GAKUHU=0) {r1r1 v0 c1}

TR(2)
	#V_PIANO
	RMDINIT(250,370,110,115)
	Q(95)
	o5
	r8
	Sub{#p1}
	#lo1
	o6
	#co2

	#tr2={
		Sub{#p2}
		#lo3

		Sub{#p3}
		o2
		#lo5
		#lo6
		o5
		Sub{r-8 #p4}
		#lo1
		o6
		#co2
	}
	LoopPlay(#tr2,0)
	Sub{#p5}
	#lo7
	#loend
	o6
	#coend
	#loend2
